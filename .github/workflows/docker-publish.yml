# .github/workflows/docker-publish.yml

name: Docker Build, Push, and Update Helm Values

on:
  push:
    branches: [ "master" ] # master 브랜치에 푸시될 때 실행
    tags:
      - 'v*.*.*'             # 버전 태그 푸시 시 실행 (예: v1.0.0)
  workflow_dispatch:         # 수동 실행 허용

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}                        # 예: ghcr.io/사용자명/레포명
      HELM_REPO: mingovvv/helm-charts                            # 헬름 차트 저장소
      HELM_REPO_CHECKOUT_PATH: helm-charts                      # actions/checkout 시 사용할 경로
      HELM_CHART_NAME: show-git                                 # 서비스별 헬름 차트 디렉토리 이름
      HELM_VALUES_FILE: values.yaml                             # values.yaml 파일 이름
      HELM_VALUES_PATH: ${{ github.workspace }}/helm-charts/charts/show-git/values.yaml

    steps:
      - name: Checkout service repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout Helm Chart repository
        uses: actions/checkout@v4
        with:
          repository: mingovvv/helm-charts
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          path: helm-charts

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew bootJar --info

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=tag
            type=sha,prefix=,suffix=,format=short

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update Helm values.yaml with new image tag
        run: |
          TAG="${{ steps.meta.outputs.version_sha_short }}"
          echo "Using tag: $TAG"
          sed -i "s/^\( *tag: \).*$/\1$TAG/" "${{ env.HELM_VALUES_PATH }}"

      - name: Commit and push updated values.yaml to Helm Chart repo
        run: |
          cd helm-charts
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add charts/${{ env.HELM_CHART_NAME }}/${{ env.HELM_VALUES_FILE }}
          git commit -m "ci: update image tag to ${{ steps.meta.outputs.version }}"
          git push
